################################################################################
# miniâ€‘caÂ Â +Â Â MariaDBÂ Â +Â Â Nginxâ€‘Proxyâ€‘Manager
# -----------------------------------------------------------------------------#
# â€¢ `init`     â€“ oneâ€‘shot bootstrap (root CA)               âš™ run with profile
# â€¢ `minica`   â€“ live domainâ€‘watcher (longâ€‘running)
# â€¢ `cli`      â€“ onâ€‘demand CA commands (oneâ€‘off container)
# â€¢ `cert-sync`â€“ copies freshlyâ€‘issued certs into NPM (oneâ€‘off container)
# â€¢ `db`       â€“ MariaDB for NPM
# â€¢ `npm`      â€“ Nginxâ€‘Proxyâ€‘Manager
#
# All variable references come from the .env generated by *genenv.py*.
################################################################################
services:

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ miniâ€‘ca â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  init:
    image: minica:latest
    build:
      context: .
      dockerfile: docker/Dockerfile
    entrypoint: ["entry-init.sh"]
    user: "0"                  
    volumes:
      - minica-data:/data
    restart: "no"
    profiles: ["setup"]        

  minica:
    image: minica:latest       
    build:
      context: .
      dockerfile: docker/Dockerfile
    volumes:
      - minica-data:/data
    restart: unless-stopped

  cli:
    extends: minica            
    entrypoint: ["mini_ca.py"] 
    # ðŸš«  NO profile â†’ always exists in the project graph
    volumes:
      - minica-data:/data
      - npm_data:/npm-data     

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ cert â†’ NPM oneâ€‘shot copier â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  cert-sync:
    image: alpine:latest
    container_name: cert-sync
    environment:
      - DOMAIN                 
    command: >-
      sh -ceu '
        SRC="/certs/certificates/${DOMAIN}"
        DST="/npm-data/custom_ssl/$(echo "$DOMAIN" | tr . _)"
        mkdir -p "$DST"
        cp "$SRC/${DOMAIN}.crt" "$DST/fullchain.pem"
        cp "$SRC/${DOMAIN}.key" "$DST/privkey.pem"
        echo "âœ…  copied cert to $DST"
      '
    volumes:
      - minica-data:/certs:ro  
      - npm_data:/npm-data     
    network_mode: none         
    depends_on:
      - cli                    
    profiles: ["sync"]         
    restart: "no"

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ MariaDB (backâ€‘end) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  db:
    image: jc21/mariadb-aria:latest
    container_name: npm_db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_MYSQL_NAME}
      - MYSQL_USER=${DB_MYSQL_USER}
      - MYSQL_PASSWORD=${NPM_DB_PASSWORD}
      - MARIADB_AUTO_UPGRADE=1
    volumes:
      - npm_mysql:/var/lib/mysql
    restart: unless-stopped

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Nginxâ€‘Proxyâ€‘Manager (frontâ€‘end) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  npm:
    image: jc21/nginx-proxy-manager:latest
    container_name: ${NPM_CONTAINER_NAME}
    depends_on:
      - db
    environment:
      - DB_MYSQL_HOST=${DB_MYSQL_HOST}
      - DB_MYSQL_PORT=${DB_MYSQL_PORT}
      - DB_MYSQL_USER=${DB_MYSQL_USER}
      - DB_MYSQL_PASSWORD=${NPM_DB_PASSWORD}
      - DB_MYSQL_NAME=${DB_MYSQL_NAME}
      - INITIAL_ADMIN_EMAIL=${INITIAL_ADMIN_EMAIL}
      - INITIAL_ADMIN_PASSWORD=${NPM_INITIAL_PASSWORD}
    ports:
      - "${NPM_PORT}"      
      - "${NPM_UI_PORT}"   
      - "${NPM_S_PORTS}"   
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
      - minica-data:/certs:ro      
    restart: unless-stopped

################################################################################
# named volumes â€“ keep state between runs
################################################################################
volumes:
  minica-data:          
  npm_data:             
  npm_mysql:            
  npm_letsencrypt:      

