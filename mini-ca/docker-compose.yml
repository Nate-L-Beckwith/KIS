################################################################################
# mini‑ca – local Certificate Authority module + NPM‑cert sync
################################################################################
x-minica-image: &minica-image
  image: minica:latest
  build:
    context: .
    dockerfile: docker/Dockerfile

volumes:
  minica-data:         # CA, certs, DOMAINS
  npm_data:            # created by the NPM stack

services:

  # ───────────────────────── bootstrap (one‑shot) ────────────────────────────
  init:
    <<: *minica-image
    user: "0"                  # root – fixes ownership
    entrypoint: ["entry-init.sh"]
    volumes:
      - minica-data:/data
    profiles: ["setup"]        # run only once:  docker compose --profile setup up -d
    restart: "no"

  # ───────────────────────── cert‑watcher (daemon) ───────────────────────────
  minica:
    <<: *minica-image
    user: "1001"               # run as the myca user **inside** the image
    depends_on: [init]         # wait until root CA exists + perms are set
    volumes:
      - minica-data:/data
    restart: unless-stopped

  # ───────────────────────── ad‑hoc CLI (on demand) ──────────────────────────
  cli:
    <<: *minica-image
    entrypoint: ["mini_ca.py"] # e.g. docker compose run --rm cli issue foo.dev
    user: "1001"
    profiles: ["cli"]          # never started automatically
    volumes:
      - minica-data:/data
      - npm_data:/npm-data

  # ───────────────────────── one‑shot cert → NPM copy ────────────────────────
  cert-sync:
    image: alpine:latest
    container_name: cert-sync
    environment:
      - DOMAIN                 # injected by ‘make issue …’
    command: >
      sh -ceu '
        SRC=/certs/certificates/$DOMAIN
        DST=/npm-data/custom_ssl/$(echo "$DOMAIN" | tr . _)
        mkdir -p "$DST"
        cp "$SRC/$DOMAIN.crt"  "$DST/fullchain.pem"
        cp "$SRC/$DOMAIN.key"  "$DST/privkey.pem"
        echo "✅  copied cert to $DST"
      '
    volumes:
      - minica-data:/certs:ro
      - npm_data:/npm-data
    network_mode: none
    depends_on: [cli]          # make sure the cert has just been issued
    profiles: ["sync"]         # launched only from the Makefile
    restart: "no"
